<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group5.sebmnotificationservice.dao.NotificationRecordMapper">

    <resultMap id="BaseResultMap" type="com.group5.sebmmodels.entity.NotificationRecordPo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="notificationTaskId" column="notificationTaskId" jdbcType="BIGINT"/>
        <result property="userId" column="userId" jdbcType="BIGINT"/>
        <result property="notificationMethod" column="notificationMethod" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="readStatus" column="readStatus" jdbcType="INTEGER"/>
        <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
        <result property="sendTime" column="sendTime" jdbcType="TIMESTAMP"/>
        <result property="errorMsg" column="errorMsg" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, notificationTaskId, userId, notificationMethod, status, readStatus, 
        isDelete, sendTime, errorMsg, createTime, updateTime
    </sql>

    <!-- 查询用户的未读记录数量 -->
    <select id="countUnreadByUserId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM notificationRecord
        WHERE userId = #{userId}
          AND status = 1
          AND readStatus = 0
          AND isDelete = 0
    </select>

    <!-- 查询用户的所有未读记录 -->
    <select id="selectUnreadByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM notificationRecord
        WHERE userId = #{userId}
          AND status = 1
          AND readStatus = 0
          AND isDelete = 0
        ORDER BY createTime DESC
    </select>

    <!-- 查询通知任务的所有记录 -->
    <select id="selectByTaskId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM notificationRecord
        WHERE notificationTaskId = #{notificationTaskId}
          AND isDelete = 0
        ORDER BY userId, notificationMethod
    </select>

    <!-- 根据通知角色标记所有未读消息为已读 -->
    <update id="markAtlAsReadByRole">
        UPDATE notificationRecord nr
        INNER JOIN notificationTask nt ON nr.notificationTaskId = nt.id
        SET nr.readStatus = 1,
            nr.updateTime = NOW()
        WHERE nt.notificationRole = #{notificationRole}
          AND nr.readStatus = 0
          AND nr.isDelete = 0
    </update>

</mapper>
