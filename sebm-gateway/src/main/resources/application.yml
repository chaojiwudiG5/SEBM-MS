server:
  port: 8090

spring:
  main:
    web-application-type: reactive
  application:
    name: gateway
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_ADDR}
      
    gateway:
      routes:
        - id: user-service
          uri: lb://sebm-user-service         # lb:// 表示负载均衡，通过 Nacos 找服务
          predicates:
            - Path=/api/user/**       # 前端请求 /api/users/** → 转发 user-service
        - id: device-service
          uri: lb://sebm-device-service
          predicates:
            - Path=/api/device/**
        - id: borrow-service
          uri: lb://sebm-borrow-service
          predicates:
            - Path=/api/borrow/**
        - id: notification-service
          uri: lb://sebm-notification-service
          predicates:
            - Path=/api/notification/**
        - id: maintenance-service
          uri: lb://sebm-maintenance-service
          predicates:
            - Path=/api/maintenance/**
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.netflix.loadbalancer: DEBUG

knife4j:
  gateway:
    # ① 第一个配置，开启gateway聚合组件
    enabled: true
    # ② 第二行配置，设置聚合模式采用discover服务发现的模式
    strategy: discover
    discover:
      # ③ 第三行配置，开启discover模式
      enabled: true
      # ④ 第四行配置，聚合子服务全部为Swagger2规范的文档
      version: openapi3

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
