@startuml
' 设置左到右布局
left to right direction

' 定义样式
skinparam rectangle {
    BackgroundColor #F0F8FF
    BorderColor #4682B4
    FontColor #00008B
}
skinparam circle {
    BackgroundColor #E6E6FA
    BorderColor #6A5ACD
    FontColor #483D8B
}
skinparam arrow {
    Color #556B2F
    Thickness 1.5
}

' 左侧模块: CustomerMgr
rectangle "<<service>>\nCustomerMgr" as CustomerService {
    rectangle "<<aggregate>>\nCustomerAgg" as CustomerAgg {
        class "<<root entity>>\nCustomer" as Customer {
            [<<vo>> -custId]
            [name]
            [address]
            [<<vo>> -rentalId]
        }
    }
}

' 中间上方模块: AgencyMgr
rectangle "<<service>>\nAgencyMgr" as AgencyService {
    rectangle "<<aggregate>>\nAgencyAgg" as AgencyAgg {
        class "<<root entity>>\nMaidAgency" as MaidAgency {
            [<<vo>> -agencyId]
            [name]
            [contactInfo]
        }

        class "<<entity>>\nAgentAdmin" as AgentAdmin {
            [<<vo>> -adminId]
            [name]
            [role]
        }

        class "<<entity>>\nMaid" as Maid {
            [<<vo>> -maidId]
            [name]
            [skills]
            [availability]
        }

        class "<<domain event>>\nMaidAddedToAgency" as MaidAddedEvent {
            [agencyId]
            [maidId]
            [timestamp]
        }

        class "<<domain event>>\nJobScheduleCreated" as ScheduleEvent {
            [scheduleId]
            [maidId]
            [customerId]
            [timestamp]
        }

        ' 聚合内关系
        MaidAgency -- AgentAdmin : contains
        MaidAgency -- Maid : employs
        MaidAgency -- MaidAddedEvent : triggers
        Maid -- ScheduleEvent : generates
    }
}

' 中间下方模块: MaidOrderMgr
rectangle "<<service>>\nMaidOrderMgr" as OrderService {
    rectangle "<<aggregate>>\nUsageAgg" as UsageAgg {
        class "<<root entity>>\nMaidUsagePlan" as UsagePlan {
            [<<vo>> -planId]
            [planType]
        }

        class "<<entity>>\nMaidUsage" as MaidUsage {
            [<<vo>> -usageId]
            [customerId]
            [date]
            [serviceDetails]
        }

        class "<<entity>>\nMaidUsageBill" as UsageBill {
            [<<vo>> -billId]
            [amount]
            [status]
        }

        class "<<domain event>>\nMaidUsagePlanSelected" as PlanSelectedEvent {
            [planId]
            [customerId]
            [timestamp]
        }

        class "<<domain event>>\nMaidUsageRecorded" as UsageRecordedEvent {
            [usageId]
            [planId]
            [timestamp]
        }

        ' 聚合内关系
        UsagePlan -- MaidUsage : tracks
        MaidUsage -- UsageBill : generates
        UsagePlan -- PlanSelectedEvent : triggers
        MaidUsage -- UsageRecordedEvent : creates
    }
}

' 右侧模块: PaymentMgr
rectangle "<<service>>\nPaymentMgr" as PaymentService {
    rectangle "<<aggregate>>\nPaymentAgg" as PaymentAgg {
        class "<<root entity>>\nPayment" as Payment {
            [<<vo>> -paymentId]
            [amount]
            [method]
        }

        class "<<entity>>\nReceipt" as Receipt {
            [<<vo>> -receiptId]
            [paymentId]
            [issueDate]
        }

        class "<<domain event>>\nPaymentCompleted" as PaymentEvent {
            [paymentId]
            [amount]
            [timestamp]
        }

        ' 聚合内关系
        Payment -- Receipt : generates
        Payment -- PaymentEvent : triggers
    }
}

' 跨模块关系
Customer -- UsagePlan : selects
UsageBill -- Payment : relates to
Maid -- MaidUsage : provides service to
@enduml